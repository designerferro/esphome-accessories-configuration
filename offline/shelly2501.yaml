substitutions:
  hostname: 'shelly2501'
  pin_led1: 'GPIO0'
  pin_button1: 'GPIO2'
  pin_relay1: 'GPIO4'
  pin_switch2n: 'GPIO5'
  pin_sda: 'GPIO12'
  pin_switch1n: 'GPIO13'
  pin_scl: 'GPIO14'
  pin_relay2: 'GPIO15'
  pin_ade7953: 'GPIO16'
  pin_temp: 'A0'
  devicename: 'shelly2501'
  location: 'Kitchen'
  open_duration: 17sec
  open_switch: switch2
  open_relay: relay1
  open_time: '0 0 6 * * *'
  close_duration: 16sec
  close_switch: switch1
  close_relay: relay2

esphome:
  name: $hostname
  platform: ESP8266
  board: modwifi
wifi:
  ssid: !secret wifissid
  password: !secret wifipass
  fast_connect: True
  ap:
    ssid: $hostname
api:
  reboot_timeout: 0s
  password: !secret apipass
ota:
  safe_mode: True
  password: !secret otapass

logger: 

time:
  - platform: homeassistant
    id: homeassistant_time
    on_time:
      - cron: '0 0 21 * * *'
        then:
          if:
            condition:
              switch.is_off: ignore_schedule
            then:
              cover.close: rolladen
      - cron: ${open_time}
        then:
          if:
            condition:
              switch.is_off: ignore_schedule
            then:
              cover.open: rolladen

i2c:
  sda: ${pin_sda}
  scl: ${pin_scl}

sun:
  latitude: !secret latitude
  longitude: !secret longitude
  on_sunset:
    - then:
        if:
          condition:
            switch.is_off: ignore_schedule
          then:
            cover.close: rolladen


sensor:
  - platform: ade7953
    irq_pin: GPIO16
    voltage:
      name: Shelly Voltage
    current_a:
      name: Shelly Current B
      internal: true
    current_b:
      name: Shelly Current A
      internal: true
    active_power_a:
      name: Shelly Active Power B
      id: shelly_active_power_b
      internal: true
      filters:
        - multiply: -1
    active_power_b:
      name: Shelly Active Power A
      id: shelly_active_power_a
      internal: true
      filters:
        - multiply: -1
    update_interval: 60s
  # NTC Temperature
  - platform: ntc
    sensor: temp_resistance_reading
    name: "Shelly Temperature"
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: ${pin_temp}
  - platform: uptime
    name: Uptime Sensor
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
switch:
  - platform: gpio
    pin: ${pin_relay1}
    name: "Relay #1"
    internal: true
    id: relay1
    interlock: &interlock_group [relay1, relay2]
  - platform: gpio
    pin: ${pin_relay2}
    name: "Relay #2"
    internal: true
    id: relay2
    interlock: *interlock_group
  - platform: template
    id: block_control
    name: "${location} Block Control"
    optimistic: true
  - platform: template
    id: ignore_schedule
    name: "${location} Ignore Schedule"
    optimistic: true
  - platform: template
    name: "Move UP"
    internal: true
    lambda: |-
      if (id(${open_switch}).state && !id(block_control).state) {
        return true;
      } else {
        return false;
      }
    on_turn_on:
      then:
        cover.open: rolladen
    on_turn_off:
      then:
        cover.stop: rolladen
    optimistic: true
  - platform: template
    name: "Move DOWN"
    internal: true
    lambda: |-
      if (id(${close_switch}).state && !id(block_control).state) {
        return true;
      } else {
        return false;
      }
    on_turn_on:
      then:
        cover.close: rolladen
    on_turn_off:
      then:
        cover.stop: rolladen
    optimistic: true
binary_sensor:
  - platform: gpio
    pin: ${pin_switch1n}
    name: "Switch #1"
    internal: true
    id: switch1
  - platform: gpio
    pin: ${pin_switch2n}
    name: "Switch #2"
    internal: true
    id: switch2
cover:
  - platform: time_based
    name: "${location} Rolladen"
    id: rolladen
    open_action:
      - switch.turn_on: ${open_relay}
    open_duration: ${open_duration}
    close_action:
      - switch.turn_on: ${close_relay}
    close_duration: ${close_duration}
    stop_action:
      - switch.turn_off: ${open_relay}
      - switch.turn_off: ${close_relay}